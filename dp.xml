<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!--[
<!ENTITY % fithesis SYSTEM "http://www.fi.muni.cz/~xpavlov/fithesis.mod">
%fithesis;
]>
-->
<book lang="en">
  <bookinfo>
    <title>Real-time Communication in Web Browser</title>

    <subtitle>Master thesis</subtitle>

    <author>
      <firstname>Pavel</firstname>

      <surname>Smolka</surname>

      <fi:woman
      xmlns:fi="http://www.fi.muni.cz/~xpavlov/fithesis">false</fi:woman>

      <fi:faculty
      xmlns:fi="http://www.fi.muni.cz/~xpavlov/fithesis">fi</fi:faculty>

      <fi:advisor xmlns:fi="http://www.fi.muni.cz/~xpavlov/fithesis">doc.
      RNDr. Tomáš Pitner, Ph.D.</fi:advisor>
    </author>

    <fi:thanks xmlns:fi="http://www.fi.muni.cz/~xpavlov/fithesis">Thanks to
    everyone... TODO: Petr Kunc (help with OpenTok &amp; RealTime
    communication,</fi:thanks>

    <pubdate>2013</pubdate>

    <abstract>
      <para>TODO</para>
    </abstract>

    <keywordset>
      <keyword>XMPP</keyword>

      <keyword>real-time communication</keyword>

      <keyword>RTC</keyword>

      <keyword>Celebrio</keyword>

      <keyword>web browser</keyword>

      <keyword>Comet</keyword>

      <keyword>TODO</keyword>
    </keywordset>
  </bookinfo>

  <toc></toc>

  <chapter id="uvod">
    <title>Introduction</title>

    <para>Millions, billions, trillions. That many and even more messages are
    exchanged every day between various people over the world. The Internet
    created brand new way to communicate and collaborate, even if you are
    located on the opposite parts of the world. Since the times of Alexander
    Graham Bell, the accesibility to the communication devices and their
    simplicity incredibly enhanced. Nowadays, almost 2.5 billion people over
    the world have access to the Internet and therefore they are able to use
    almost limitless communication possibilities it provides.
    <citation>internet-usage</citation></para>

    <para>However, the manner of Internet usage essentially changed during the
    first decade of 21st century. Using the Internet and using the web browser
    became almost synonyms. People use the web browser as the primary platform
    to do every single task on the Internet. Sometimes it's not even possible
    to use the other internet services without visiting certain web page in
    the web browser and performing the authentication there.<footnote>
        <para>Two examples of such behavior. Wi-fi network in the Student
        Agency coaches forces the user to visit the entry page in the web
        browser. The second example, very well known to the students of the
        Faculty of Informatics at Masaryk University, is the faculty wireless
        network called wlan_fi. Every user has to open the web browser and log
        in with her credentials. It's not possible just to open the terminal
        or e-mail client and start working online.</para>
      </footnote> Considering the mentioned fact, web browsers became also the
    basic platform for the communication tools. Even though the purpose of the
    world wide web and HTTP protocol was completely different at first
    (displaying single documents connected via hypertext links), it appeared
    that there is the need of common rich applications running withing web
    browser - rich internet application. So popular social networks are built
    on top of the web browser platform and they are used by more than billion
    people over the world. <citation>facebook-usage</citation> And the main
    reason why the social networks are so popular is the real-time stream of
    news and messages from the other people. By the beginning of the year
    2013, I would say that static web is dead - users prefer
    interactivity.</para>

    <para>This thesis embraces the topic of real-time applications in web
    browsers, especially the text communication tools and the technologies
    being used to develop them. It also describes the problem of
    <quote>inter-process</quote> communication between various web pages which
    need to cooperate and exchange information as quickly as possible.
    Finally, the possibilities of multimedia content transfer (audio and
    video) and the current options of capturing multimedia directly from the
    web browser are described as well.</para>

    <para>As mentioned above, the web browser became one of the most popular
    platforms. Celebrio, simple software for the elderly simulating the
    operating system interface, is typical example of rich internet
    application. <citation>celebrio-system</citation> All the topics mentioned
    in the previous paragraph appeared to be very important in the system.
    When interviewing the elderly people in the Czech Republic, it appeared
    that almost 90 % of the elderly computer users use the real-time
    communication (RTC) applications, mostly Skype.
    <citation>elderly-questionnaires</citation> Interaction with their loved
    ones is the most desired benefit they expect from the computer. Therefore,
    creating real-time application, text messenger supporting video calling,
    became not only programming challenge but also a business goal.</para>

    <para>Considering the fact the people like real-time communication while
    using web browser brings us the question what the currently available
    solutions are. There are <quote>big players</quote> providing their own
    services as closed-source, without the possibility to use them. To name
    the most important, it's Google Talk web browser client and Facebook chat,
    using XMPP protocol.
    <citation>gtalk</citation><citation>fb-chat</citation> Even though
    Facebook chat service is not pure XMPP server implementation (the message
    and presence engine is proprietary system of Facebook implemented mostly
    in C++ and Erlang), they provide the possibility to connect to the
    <quote>world of Facebook Chat</quote> via XMPP as proxy.
    <citation>fb-erlang</citation> Combination of the facts that XMPP is open
    technology with open-sourced client and server implementations
    <citation>xmpp-history</citation> and the big internet companies also use
    it persuaded us to use it in our communication application too. XMPP
    itself and its usage in web applications is described in <xref
    linkend="chap-xmpp" />. </para>

    <para>Since the web browser was designed to perform simple
    requests/response interaction, it is not a typical platform for building
    real-time application. Thus, there is a need for an extra layer enhancing
    or even completely replacing the common way HTTP communicates. Within the
    scope of this thesis, namely the WebSockets and HTTP long polling
    approaches are used. The two of them and basic infromation about several
    others are covered in <xref linkend="chap-rtc" />.</para>

    <para>There are many existing real-time chat-based applications over the
    Internet we could have used. However, none of them suited our needs
    perfectly. Celebrio has very specific graphical user interface (GUI) and
    there is a need to integrate both text-based chat and video calling. Just
    to mention, there is commercial chat module Cometchat<footnote>
        <para>http://www.cometchat.com/</para>
      </footnote> or even open project Jappix.<footnote>
        <para>https://project.jappix.com/</para>
      </footnote> Video calling web browser applications are provided for
    example by TokBox Inc.<footnote>
        <para>http://www.tokbox.com/</para>
      </footnote> Nevertheless, following the rule that <quote>If you have to
    customize 1/5 of a reusable component, its likely better to write it from
    scratch</quote>, <citation>brian-stats-tweet</citation> just very generic
    existing libraries (Strophe.js) and APIs (OpenTok) were used for
    implementing brand new application called <emphasis>Celebrio
    Talker</emphasis>. The general approaches when building web browser based
    chat application are mentioned in <xref
    linkend="chap-xmpp-in-javascript" />. Within the programming part of the
    thesis, the real-time text chat application, video calling application and
    simple <quote>inter-process</quote> communication tool for Celebrio has
    been implemented. Celebrio Talker application itself, its architecture and
    the specific procedures used to create it are described in <xref
    linkend="chap-talker" />.</para>

    <para>It has been said that Skype<footnote>
        <para>http://www.skype.com/</para>
      </footnote> is the most favorite communication tool among the target
    audience. If it had been implemented, the existing customer base could be
    used and converted to our messaging application. However, there is one big
    pitfall in this approach. Skype license strictly prohibits incorporating
    their software into mobile devices. <citation>skype-license</citation>
    They support only prompting the official Skype client to be opened via
    Skype URI, which is insufficient for Celebrio since the messaging client
    has to be built in the system, with the corresponding user
    interface.</para>

    <para>Finally, there are several notes about <quote>inter-process
    communication</quote> between different applications running separately in
    various browser frames, tabs or even windows. <xref
    linkend="chap-inter-process" /> covers this topic and describes the issues
    we came accross when implementing such functionality for Celebrio, where
    every application runs in separate iframe.</para>
  </chapter>

  <chapter id="chap-rtc">
    <title>Bidirectional communication</title>

    <para>The very essence of every instant messaging is the bidirectional
    stream where both sides can immediately <emphasis>push</emphasis> new data
    and the other side (or more other sides, respectively) is promptly
    notified without the need to perform any manual <emphasis>pull</emphasis>
    (update) action<indexterm>
        <primary>pull &amp; push communication</primary>
      </indexterm>.<footnote>
        <para>In this thesis, this behaviour is commonly refered as RTC. The
        <quote>real-time part</quote> relates mostly to the server part since
        the application running in the web browser can perform the AJAX
        request on background anytime and the server receives the request
        instantly. Before AJAX became the essential part of every web app,
        ifram</para>
      </footnote> Such use case requires appropriate transport layer on top
    which the application can send the messages via any other protocol. When
    using HTTP, there is a TCP connection opened by the client (web browser)
    through which the data is sent. However, according to the HTTP protocol,
    the communication is strictly initiated by the client - HTTP is a
    request/response protocol. <citation>rfc-http</citation> So, when one
    needs the web browser application to communicate in both directions, HTTP
    protocol must be hacked somehow or another communication channel has to be
    used. This chapter covers both. </para>

    <sect1>
      <title>Using HTTP requests</title>

      <para>Historicaly the first approach, for a very long time the only one,
      is hacking HTTP to achieve RTC. The idea is very simple, depicted in
      TODO figure. Generally, the client sends an extra request and it is not
      awaiting the response immediately. Instead, the server keeps the request
      for some time </para>

      <para>The other way how to succesfully implement XMPP communication
      between web browser and the client (and of course, communication between
      two clients, since it is always mediated by certain server) is emulating
      the connection with mechanisms overally called
      <emphasis>Comet</emphasis><indexterm>
          <primary>Comet</primary>
        </indexterm>.</para>
    </sect1>

    <sect1>
      <title>WebSockets</title>

      <para>Unless HTML5 technology called <emphasis>WebSockets</emphasis> is
      used, neither the client nor the server can establish permanent TCP
      connection. Usually if the WebSockets are used, the XMPP server needs
      one extra layer, usually implemented as the server plugin, to be able to
      communicate directly with the web browser. This approach is covered in
      <xref linkend="chap-ws" />.</para>
    </sect1>

    <sect1>
      <title>Existing RTC frameworks</title>

      <para>Actually, there are other options such as using various browser
      plugins (e.g. Adobe Flash) to provide the base layer for TCP
      connections, but such tools has not been used within this thesis and are
      not further dealt with.</para>

      <para>Describe other approaches to RTC in WB than XMPP. Tell why we
      didn't use them (or that we used - OpenTok).</para>

      <para>Mention:</para>

      <para>OpenTok</para>

      <para>SignalR (.NET)</para>

      <para>WebRTC (http://www.webrtc.org/)</para>

      <para>Google hangouts API</para>
    </sect1>
  </chapter>

  <chapter id="chap-xmpp">
    <title>Extensible Messaging and Presence Protocol</title>

    <para>Extensible Messaging and Presence Protocol (XMPP) technologies were
    invented by Jeremie Miller in 1998.
    <citation>xmpp-the-definitive-guide</citation> It is one of the most
    widespread technologies for instant messaging (IM),<footnote>
        <para>Acutally, the IM client or even the techology itself is
        sometimes called <quote>Instant Messenger</quote>. This term is
        registered as a trademark by AOL company.
        <citation>aol-trademarks</citation></para>
      </footnote> i.e. exchanging the text or multimedia data between several
    endpoints. The <quote>native</quote> implementation of XMPP works right on
    top of TCP protocol: XMPP endpoint (called client as it represents the
    first actor in client-server architecture) opens long-lived TCP
    connection. Then, both the client and the server negotiate and open XML
    streams so there is one stream in each direction.
    <citation>xmpp-the-definitive-guide</citation> When the connection is
    established, both client and server can push any changes as XML elements
    to the stream and the other side obtains them immediately. Usual XMPP
    clients are standalone applications able to open TCP connection and listen
    to the stream opened by the server.</para>

    <sect1>
      <title>Fundamental bulding blocks in XMPP</title>

      <para>Mention the terms as stanza, roster, describe the subscription
      mechanism.</para>
    </sect1>

    <sect1 id="chap-bosh">
      <title>XMPP over BOSH</title>

      <para>Describe BOSH (http://xmpp.org/extensions/xep-0124.html)</para>

      <para>and XMPP Over BOSH
      (http://xmpp.org/extensions/xep-0206.html).</para>

      <para>Later on, description of BOSH extension, including the advantages
      and limitations. Describe also the connection to HTTP protocol.</para>
    </sect1>

    <sect1 id="chap-ws">
      <title>XMPP over WebSockets</title>

      <para>luajit - lua jit compiler</para>

      <para>It was neccessary to install: apt balíky luajit +
      liblua5.1-bitop0</para>

      <para>TODO create diagram here (XMPP server - plugin - incoming
      connection vs xmpp server - standard connection).</para>
    </sect1>

    <sect1>
      <title>Jingle</title>

      <para>Jingle extension - multimedia.</para>

      <para>http://xmpp.org/extensions/xep-0166.html</para>
    </sect1>

    <sect1>
      <title>Inter-process communication</title>

      <para>Pub-sub extensions for inter-process communication.</para>

      <para>http://xmpp.org/extensions/xep-0060.html</para>
    </sect1>
  </chapter>

  <chapter id="chap-xmpp-in-javascript">
    <title>XMPP client in Javascript</title>

    <para>Describe the tools that can be used to implement RTC in WB (and
    which were used to implement Celebrio Talker)</para>

    <para>Strophe (simple XMPP in Javascript)</para>

    <para>Strophe connecting/attaching - security issues. TODO
    programming</para>

    <para>Strophe plugins</para>

    <para>Possible server-side implementations (JAXL, XMPPHP, ...)</para>
  </chapter>

  <chapter id="chap-talker">
    <title>Talker</title>

    <para>Describe the Talker application in Celebrio.</para>

    <para>Mention what we expected from the app (value proposition)</para>

    <para>Then, application analysis, design and implmementation.</para>

    <para>Describe the architecture and used tools&amp;frameworks: JS +
    Ember.js, OpenTok, WebSockets in new OpenTok</para>

    <para>Don't forget to use UML: use case diagram, class diagram (if any),
    sequence/action diagram</para>

    <sect1>
      <title>Ember.js</title>

      <para>Describe Javascript client-side MVC frameworks overall, compare,
      tell why we used Ember</para>

      <sect2>
        <title>Subsection about Ember...</title>

        <para></para>
      </sect2>
    </sect1>
  </chapter>

  <chapter id="chap-inter-process">
    <title>Inter-process Communication Framework</title>

    <para>Implement and describe framework for inter-process communication in
    Celebrio.</para>

    <para>First, the lightweight one (which we already have), then implement
    the "heavy" one, if there's enough time.</para>
  </chapter>

  <chapter>
    <title>Conclusion</title>

    <para>conclusion</para>

    <sect1>
      <title>Another part of the conclusion</title>

      <para>Another part of the conclusion... just to have subchapter
      here</para>
    </sect1>
  </chapter>

  <bibliography>
    <biblioentry>
      <abbrev>xmpp-the-definitive-guide</abbrev>

      <authorgroup>
        <author>
          <firstname>Peter</firstname>

          <surname>Saint-Andre</surname>
        </author>

        <author>
          <firstname>Kevin</firstname>

          <surname>Smith</surname>
        </author>

        <author>
          <firstname>Remko</firstname>

          <surname>Tronçon</surname>
        </author>
      </authorgroup>

      <title>XMPP: The Definitive Guide</title>

      <subtitle>Building Real-Time Applications with Jabber
      Technologies</subtitle>

      <publisher>
        <publishername>Sebastopol: O'Reilly</publishername>
      </publisher>

      <pubdate>2009</pubdate>

      <isbn>978-0-596-52126-4</isbn>

      <pagenums>310 (7, 16, ...)</pagenums>
    </biblioentry>

    <biblioentry>
      <abbrev>internet-usage</abbrev>

      <author>
        <surname>Miniwatts Marketing Group</surname>
      </author>

      <title>Internet Users in the World - 2012 Q2</title>

      <publisher>
        <publishername>Internet World Stats</publishername>
      </publisher>

      <pubdate>2/17/2013 [retrieved 2/19/2013]</pubdate>

      <releaseinfo>from <ulink
      url="http://www.internetworldstats.com/stats.htm">http://www.internetworldstats.com/stats.htm</ulink></releaseinfo>
    </biblioentry>

    <biblioentry>
      <abbrev>facebook-usage</abbrev>

      <author>
        <firstname>Drew</firstname>

        <surname>Olanoff</surname>
      </author>

      <title>Facebook Announces Monthly Active Users Were At 1.01 Billion As
      Of September 30th</title>

      <publisher>
        <publishername>TechCrunch</publishername>
      </publisher>

      <pubdate>10/23/2012 [retrieved 2/19/2013]</pubdate>

      <releaseinfo>from <ulink
      url="http://techcrunch.com/2012/10/23/facebook-announces-monthly-active-users-were-at-1-01-billion-as-of-september-30th/">http://techcrunch.com/2012/10/23/facebook-announces-monthly-active-users-were-at-1-01-billion-as-of-september-30th/</ulink></releaseinfo>
    </biblioentry>

    <biblioentry>
      <abbrev>ria</abbrev>

      <author>
        <firstname>James</firstname>

        <surname>Ward</surname>
      </author>

      <title>What is a Rich Internet Application?</title>

      <pubdate>10/17/2007 [retrieved 2/19/2013]</pubdate>

      <releaseinfo>from <ulink
      url="http://www.jamesward.com/2007/10/17/what-is-a-rich-internet-application/">http://www.jamesward.com/2007/10/17/what-is-a-rich-internet-application/</ulink></releaseinfo>
    </biblioentry>

    <biblioentry>
      <abbrev>celebrio-system</abbrev>

      <authorgroup>
        <author>
          <firstname>Pavol</firstname>

          <surname>Donko</surname>
        </author>

        <author>
          <firstname>Petr</firstname>

          <surname>Kunc</surname>
        </author>

        <author>
          <firstname>Martin</firstname>

          <surname>Novák</surname>
        </author>

        <author>
          <firstname>Pavel</firstname>

          <surname>Smolka</surname>
        </author>

        <author>
          <firstname>Jan</firstname>

          <surname>Volmut</surname>
        </author>
      </authorgroup>

      <title>Celebrio System</title>

      <pubdate>2013 [retrieved 2/19/2013]</pubdate>

      <releaseinfo>from <ulink
      url="http://www.celebriosoftware.com/celebrio-system">http://www.celebriosoftware.com/celebrio-system</ulink></releaseinfo>
    </biblioentry>

    <biblioentry>
      <abbrev>elderly-questionnaires</abbrev>

      <authorgroup>
        <author>
          <firstname>Pavel</firstname>

          <surname>Smolka</surname>
        </author>

        <author>
          <firstname>Martin</firstname>

          <surname>Novák</surname>
        </author>
      </authorgroup>

      <title>Elderly people and the computers</title>

      <pubdate>2/11/2013 [retrieved 2/19/2013]</pubdate>

      <releaseinfo>from <ulink
      url="http://infogr.am/Seniori-a-pocitace">http://infogr.am/Seniori-a-pocitace</ulink></releaseinfo>
    </biblioentry>

    <biblioentry>
      <abbrev>aol-trademarks</abbrev>

      <authorgroup>
        <author>
          <surname>AOL Inc.</surname>
        </author>
      </authorgroup>

      <title>AOL Trademark List</title>

      <pubdate>3/15/2011 [retrieved 2/20/2013]</pubdate>

      <releaseinfo>from <ulink
      url="http://legal.aol.com/trademarks/">http://legal.aol.com/trademarks/</ulink></releaseinfo>
    </biblioentry>

    <biblioentry>
      <abbrev>xmpp-history</abbrev>

      <authorgroup>
        <author>
          <surname>The XMPP Standards Foundation</surname>
        </author>
      </authorgroup>

      <title>History of XMPP</title>

      <pubdate>1/27/2010 [retrieved 2/20/2013]</pubdate>

      <releaseinfo>from <ulink
      url="http://legal.aol.com/trademarks/">http://xmpp.org/about-xmpp/history/</ulink></releaseinfo>
    </biblioentry>

    <biblioentry>
      <abbrev>gtalk</abbrev>

      <authorgroup>
        <author>
          <surname>Google Developers</surname>
        </author>
      </authorgroup>

      <title>Google Talk Developer Documentation</title>

      <pubdate>3/23/2012 [retrieved 2/20/2013]</pubdate>

      <releaseinfo>from <ulink
      url="https://developers.google.com/talk/talk_developers_home">https://developers.google.com/talk/talk_developers_home</ulink></releaseinfo>
    </biblioentry>

    <biblioentry>
      <abbrev>fb-chat</abbrev>

      <authorgroup>
        <author>
          <surname>Facebook Developers</surname>
        </author>
      </authorgroup>

      <title>Facebook Chat API</title>

      <pubdate>2/12/2013 [retrieved 2/20/2013]</pubdate>

      <releaseinfo>from <ulink
      url="http://legal.aol.com/trademarks/">http://xmpp.org/about-xmpp/history/</ulink></releaseinfo>
    </biblioentry>

    <biblioentry>
      <abbrev>brian-stats-tweet</abbrev>

      <authorgroup>
        <author>
          <surname>Staatss, B. (Brianstaats)</surname>
        </author>
      </authorgroup>

      <title><quote>If you have to customize 1/5 of a reusable component, its
      likely better to write it from scratch @trek at
      #embercamp</quote></title>

      <pubdate>2/15/2013 [retrieved 2/23/2013]</pubdate>

      <releaseinfo>Tweet</releaseinfo>
    </biblioentry>

    <biblioentry>
      <abbrev>fb-erlang</abbrev>

      <author>
        <firstname>Eugene</firstname>

        <surname>Letuchy</surname>
      </author>

      <title>Facebook Chat</title>

      <pubdate>5/14/2008 [retrieved 2/23/2013]</pubdate>

      <releaseinfo>from <ulink
      url="https://www.facebook.com/note.php?note_id=14218138919">https://www.facebook.com/note.php?note_id=14218138919</ulink></releaseinfo>
    </biblioentry>

    <biblioentry>
      <abbrev>skype-license</abbrev>

      <author>
        <firstname>Allen</firstname>

        <surname>Smith</surname>
      </author>

      <title>Does SkypeKit work on Android?</title>

      <subtitle>Forum post</subtitle>

      <pubdate>8/7/2012 [retrieved 2/23/2013]</pubdate>

      <releaseinfo>from <ulink
      url="http://devforum.skype.com/t5/SkypeKit-FAQs/Does-SkypeKit-work-on-Android/m-p/16490/thread-id/78">http://devforum.skype.com/t5/SkypeKit-FAQs/Does-SkypeKit-work-on-Android/m-p/16490/thread-id/78</ulink></releaseinfo>
    </biblioentry>

    <biblioentry>
      <abbrev>rfc-http</abbrev>

      <authorgroup>
        <author>
          <firstname>Roy</firstname>

          <othername>Thomas</othername>

          <surname>Fielding</surname>
        </author>

        <author>
          <firstname>James</firstname>

          <surname>Gettis</surname>
        </author>

        <author>
          <firstname>Jeffrey</firstname>

          <surname>Mogul</surname>
        </author>

        <author>
          <firstname>Henrik</firstname>

          <surname>Frystyk</surname>
        </author>

        <author>
          <firstname>Larry</firstname>

          <surname>Masinter</surname>
        </author>

        <author>
          <firstname>Paul</firstname>

          <surname>Leach</surname>
        </author>

        <author>
          <firstname>Tim</firstname>

          <surname>Berners-Lee</surname>
        </author>
      </authorgroup>

      <title>Hypertext Transfer Protocol -- HTTP/1.1</title>

      <subtitle>Request for Comments: 2616</subtitle>

      <pubdate>6/1999 [retrieved 2/23/2013]</pubdate>

      <releaseinfo>from <ulink
      url="http://www.w3.org/Protocols/rfc2616/rfc2616.html">http://www.w3.org/Protocols/rfc2616/rfc2616.html</ulink></releaseinfo>
    </biblioentry>
  </bibliography>

  <index></index>

  <appendix id="my-appendix">
    <title>Screenshots of the application</title>

    <para>Some screenshots from Celebrio Talker</para>
  </appendix>
</book>
